{"abi":[{"type":"function","name":"changeSphereXEngine","inputs":[{"name":"newSphereXEngine","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sphereXEngine","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"sphereXOperator","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"event","name":"ChangedSpherexEngineAddress","inputs":[{"name":"oldEngineAddress","type":"address","indexed":false,"internalType":"address"},{"name":"newEngineAddress","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ChangedSpherexOperator","inputs":[{"name":"oldSphereXAdmin","type":"address","indexed":false,"internalType":"address"},{"name":"newSphereXAdmin","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"SphereXOperatorRequired","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"changeSphereXEngine(address)":"4c6c848f","sphereXEngine()":"3c231166","sphereXOperator()":"e7e5db4f"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SphereXOperatorRequired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldEngineAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newEngineAddress\",\"type\":\"address\"}],\"name\":\"ChangedSpherexEngineAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldSphereXAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newSphereXAdmin\",\"type\":\"address\"}],\"name\":\"ChangedSpherexOperator\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSphereXEngine\",\"type\":\"address\"}],\"name\":\"changeSphereXEngine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sphereXEngine\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sphereXOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Modified from https://github.com/spherex-xyz/spherex-protect-contracts/blob/main/src/SphereXProtectedBase.sol\",\"details\":\"In this version, the WildcatArchController deployment is the SphereX operator.      There is no admin because the arch controller address can not be modified.      All admin functions/events/errors have been removed to reduce contract size.      SphereX engine address validation is delegated to the arch controller.\",\"kind\":\"dev\",\"methods\":{\"changeSphereXEngine(address)\":{\"details\":\"Change the address of the SphereX engine.       This is also used to enable SphereX protection, which is disabled       when the engine address is 0. Note: The new engine is not validated as it would be in `SphereXProtectedBase`       because the operator is the arch controller, which validates the engine       address prior to updating it here.\\u66f4\\u6539 SphereX \\u5f15\\u64ce\\u7684\\u5730\\u5740\\u3002       \\u8fd9\\u4e5f\\u7528\\u4e8e\\u542f\\u7528 SphereX \\u4fdd\\u62a4\\uff0c\\u5f53\\u5f15\\u64ce\\u5730\\u5740\\u4e3a 0 \\u65f6\\uff0c\\u4fdd\\u62a4\\u529f\\u80fd\\u4f1a\\u88ab\\u7981\\u7528\\u3002 \\u6ce8\\u610f\\uff1a\\u65b0\\u7684\\u5f15\\u64ce\\u5730\\u5740\\u4e0d\\u4f1a\\u50cf\\u5728 `SphereXProtectedBase` \\u4e2d\\u90a3\\u6837\\u88ab\\u9a8c\\u8bc1\\uff0c       \\u8fd9\\u662f\\u56e0\\u4e3a\\u64cd\\u4f5c\\u8005\\u662f arch controller\\uff08\\u67b6\\u6784\\u63a7\\u5236\\u5668\\uff09\\uff0c       \\u5b83\\u4f1a\\u5728\\u66f4\\u65b0\\u5f15\\u64ce\\u5730\\u5740\\u4e4b\\u524d\\u5bf9\\u5176\\u8fdb\\u884c\\u9a8c\\u8bc1\\u3002 1.\\u51fd\\u6570\\u7684\\u4e3b\\u8981\\u76ee\\u7684\\u662f\\u66f4\\u6539 SphereX \\u5f15\\u64ce\\u7684\\u5730\\u5740\\u3002 2.\\u8fd9\\u4e2a\\u51fd\\u6570\\u8fd8\\u7528\\u4e8e\\u542f\\u7528\\u6216\\u7981\\u7528 SphereX \\u4fdd\\u62a4\\u529f\\u80fd\\uff1a   \\u5f53\\u8bbe\\u7f6e\\u4e00\\u4e2a\\u975e\\u96f6\\u5730\\u5740\\u65f6\\uff0c\\u4fdd\\u62a4\\u529f\\u80fd\\u88ab\\u542f\\u7528\\u3002   \\u5f53\\u8bbe\\u7f6e\\u4e3a\\u96f6\\u5730\\u5740\\u65f6\\uff0c\\u4fdd\\u62a4\\u529f\\u80fd\\u88ab\\u7981\\u7528\\u3002\"},\"sphereXEngine()\":{\"details\":\"Returns the current engine address.\"},\"sphereXOperator()\":{\"details\":\"Returns the current operator address.\"}},\"stateVariables\":{\"SPHEREX_ENGINE_STORAGE_SLOT\":{\"details\":\"Storage slot with the address of the SphereX engine contract.\"},\"_archController\":{\"details\":\"WildcatArchController \\u90e8\\u7f72\\u7684\\u5730\\u5740\\u3002      arch controller\\uff08\\u67b6\\u6784\\u63a7\\u5236\\u5668\\uff09\\u80fd\\u591f\\u8bbe\\u7f6e SphereX \\u5f15\\u64ce\\u5730\\u5740\\u3002      \\u7ee7\\u627f\\u6b64\\u5408\\u7ea6\\u7684\\u5408\\u7ea6\\u5fc5\\u987b\\u5728\\u5176\\u6784\\u9020\\u51fd\\u6570\\u4e2d\\u5206\\u914d\\u8fd9\\u4e2a\\u5730\\u5740\\u3002\"}},\"title\":\"Modified version of SphereXProtectedBase for contracts registered        on Wildcat's arch controller.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/spherex/SphereXProtectedRegisteredBase.sol\":\"SphereXProtectedRegisteredBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":ethereum-access-token/=lib/ethereum-access-token/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":sol-utils/=lib/sol-utils/src/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\",\":src/=src/\",\":vulcan/=lib/vulcan/src/\"]},\"sources\":{\"src/spherex/ISphereXEngine.sol\":{\"keccak256\":\"0xa0dab1c9241f7fe0d4290b8b5b18d0b8b39648039c53b1ebcba9e9337684d1e0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://970b0308def85c4714d06026a8e3f68eb0a02d731ecdef8e2d605a20d32952da\",\"dweb:/ipfs/QmV7aC3g4Ei1GChrr45yf6MFQHN4q7MKH4L4LrttibN2es\"]},\"src/spherex/SphereXProtectedErrors.sol\":{\"keccak256\":\"0x69249e9b1c150a8029097f3a61f7343ad5b221d2645475dd7125b84659aef240\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4347ed8743de77e55c3e1164bd9eb17b74aca6a0f64ca488e4541ee02771b58c\",\"dweb:/ipfs/QmfSmxt7tb5supPUAkgE1jwwsNBdfseqnCsvFoMDT8NPgw\"]},\"src/spherex/SphereXProtectedEvents.sol\":{\"keccak256\":\"0xbcd645fc2a361b8bc6caa452faa77a6d2d7949d7105a7d9074dd79c232a26a11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbe1a6255f42711a372ef11b40573928f5122e91f47c13e3b10d1bc9a5437c7c\",\"dweb:/ipfs/Qmd1FhCBuphnKyXkdZcmpq8xzwksxDuWPbnxXPifTU53JL\"]},\"src/spherex/SphereXProtectedRegisteredBase.sol\":{\"keccak256\":\"0x8384bbce7b65a24e52c8f38a6a3d5175bc23396486237ace7b0f573b165c7030\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6920665ff7d924e059d815b20703af7a4da04ed61b27e2b85020acda567a1dbf\",\"dweb:/ipfs/QmfXaKu5vry7hfvRpHQZtrucmMPpueFbiXU1J1KpVQ4PFS\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"SphereXOperatorRequired"},{"inputs":[{"internalType":"address","name":"oldEngineAddress","type":"address","indexed":false},{"internalType":"address","name":"newEngineAddress","type":"address","indexed":false}],"type":"event","name":"ChangedSpherexEngineAddress","anonymous":false},{"inputs":[{"internalType":"address","name":"oldSphereXAdmin","type":"address","indexed":false},{"internalType":"address","name":"newSphereXAdmin","type":"address","indexed":false}],"type":"event","name":"ChangedSpherexOperator","anonymous":false},{"inputs":[{"internalType":"address","name":"newSphereXEngine","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"changeSphereXEngine"},{"inputs":[],"stateMutability":"view","type":"function","name":"sphereXEngine","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"sphereXOperator","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"changeSphereXEngine(address)":{"details":"Change the address of the SphereX engine.       This is also used to enable SphereX protection, which is disabled       when the engine address is 0. Note: The new engine is not validated as it would be in `SphereXProtectedBase`       because the operator is the arch controller, which validates the engine       address prior to updating it here.更改 SphereX 引擎的地址。       这也用于启用 SphereX 保护，当引擎地址为 0 时，保护功能会被禁用。 注意：新的引擎地址不会像在 `SphereXProtectedBase` 中那样被验证，       这是因为操作者是 arch controller（架构控制器），       它会在更新引擎地址之前对其进行验证。 1.函数的主要目的是更改 SphereX 引擎的地址。 2.这个函数还用于启用或禁用 SphereX 保护功能：   当设置一个非零地址时，保护功能被启用。   当设置为零地址时，保护功能被禁用。"},"sphereXEngine()":{"details":"Returns the current engine address."},"sphereXOperator()":{"details":"Returns the current operator address."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["ds-test/=lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","ethereum-access-token/=lib/ethereum-access-token/contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/","sol-utils/=lib/sol-utils/src/","solady/=lib/solady/src/","solmate/=lib/solmate/src/","src/=src/","vulcan/=lib/vulcan/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/spherex/SphereXProtectedRegisteredBase.sol":"SphereXProtectedRegisteredBase"},"evmVersion":"cancun","libraries":{}},"sources":{"src/spherex/ISphereXEngine.sol":{"keccak256":"0xa0dab1c9241f7fe0d4290b8b5b18d0b8b39648039c53b1ebcba9e9337684d1e0","urls":["bzz-raw://970b0308def85c4714d06026a8e3f68eb0a02d731ecdef8e2d605a20d32952da","dweb:/ipfs/QmV7aC3g4Ei1GChrr45yf6MFQHN4q7MKH4L4LrttibN2es"],"license":"UNLICENSED"},"src/spherex/SphereXProtectedErrors.sol":{"keccak256":"0x69249e9b1c150a8029097f3a61f7343ad5b221d2645475dd7125b84659aef240","urls":["bzz-raw://4347ed8743de77e55c3e1164bd9eb17b74aca6a0f64ca488e4541ee02771b58c","dweb:/ipfs/QmfSmxt7tb5supPUAkgE1jwwsNBdfseqnCsvFoMDT8NPgw"],"license":"MIT"},"src/spherex/SphereXProtectedEvents.sol":{"keccak256":"0xbcd645fc2a361b8bc6caa452faa77a6d2d7949d7105a7d9074dd79c232a26a11","urls":["bzz-raw://fbe1a6255f42711a372ef11b40573928f5122e91f47c13e3b10d1bc9a5437c7c","dweb:/ipfs/Qmd1FhCBuphnKyXkdZcmpq8xzwksxDuWPbnxXPifTU53JL"],"license":"MIT"},"src/spherex/SphereXProtectedRegisteredBase.sol":{"keccak256":"0x8384bbce7b65a24e52c8f38a6a3d5175bc23396486237ace7b0f573b165c7030","urls":["bzz-raw://6920665ff7d924e059d815b20703af7a4da04ed61b27e2b85020acda567a1dbf","dweb:/ipfs/QmfXaKu5vry7hfvRpHQZtrucmMPpueFbiXU1J1KpVQ4PFS"],"license":"UNLICENSED"}},"version":1},"id":66}